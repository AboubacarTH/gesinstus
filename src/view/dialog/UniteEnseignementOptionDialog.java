/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.dialog;

import bean.UniteEnseignementOption;
import controller.FiliereController;
import controller.NiveauController;
import controller.OptionController;
import controller.SemestreController;
import controller.UniteEnseignementController;
import controller.UniteEnseignementOptionController;
import javax.swing.JOptionPane;

/**
 *
 * @author ATH
 */
public class UniteEnseignementOptionDialog extends javax.swing.JDialog {

    /**
     * Creates new form Classe
     * @param parent
     * @param modal
     */
    public UniteEnseignementOptionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        filiereController = new FiliereController();
        semestreController = new SemestreController();
        optionController = new OptionController();
        uniteEnseignementController = new UniteEnseignementController();
        niveauController = new NiveauController();
        uniteEnseignementOptionController = new UniteEnseignementOptionController();
        initComponents();
        initCbfiliere();
        initCbOption();
        initCbNiveau();
        initCbsemestre();
        initCbSigleUe();
        rSButton_valider.setText("Enrégistrer");
    }
    public UniteEnseignementOptionDialog(java.awt.Frame parent, boolean modal, UniteEnseignementOption uniteEnseignementOption) {
        super(parent, modal);
        filiereController = new FiliereController();
        semestreController = new SemestreController();
        optionController = new OptionController();
        uniteEnseignementController = new UniteEnseignementController();
        niveauController = new NiveauController();
        uniteEnseignementOptionController = new UniteEnseignementOptionController();
        this.uniteEnseignementOption = uniteEnseignementOption;
        initComponents();
        initCbfiliere();
        initCbOption();
        initCbNiveau();
        initCbsemestre();
        initCbSigleUe();
        try {
            rSComboMetro_filiere.setSelectedItem(filiereController.getFiliere(optionController.getOption(this.uniteEnseignementOption.getId_option()).getId_filiere()).getFiliere());
            rSComboMetro_option.setSelectedItem(optionController.getOption(this.uniteEnseignementOption.getId_option()).getOption());
            rSComboMetro_niveau.setSelectedItem(niveauController.getNiveau(semestreController.getSemestre(this.uniteEnseignementOption.getId_semestre()).getId_niveau()).getNiveau());
            rSComboMetro_semestre.setSelectedItem(semestreController.getSemestre(this.uniteEnseignementOption.getId_semestre()).getSemestre());
            rSComboMetro_ue_sigle.setSelectedItem(uniteEnseignementController.getUniteEnseignement(this.uniteEnseignementOption.getId_unite_enseignement()).getSigle());
        } catch (Exception e) {
        }
        rSButton_valider.setText("Mettre à jour");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSComboMetro_filiere = new rojerusan.RSComboMetro();
        jLabel3 = new javax.swing.JLabel();
        rSComboMetro_option = new rojerusan.RSComboMetro();
        jLabel4 = new javax.swing.JLabel();
        rSComboMetro_niveau = new rojerusan.RSComboMetro();
        jLabel5 = new javax.swing.JLabel();
        rSComboMetro_semestre = new rojerusan.RSComboMetro();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rSButton_valider = new rojeru_san.RSButton();
        rSComboMetro_ue_sigle = new rojerusan.RSComboMetro();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion des unités d'enseignement");
        setResizable(false);

        rSComboMetro_filiere.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FILIERE" }));
        rSComboMetro_filiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_filiereActionPerformed(evt);
            }
        });

        jLabel3.setText("Filière");

        jLabel4.setText("Option");

        rSComboMetro_niveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_niveauActionPerformed(evt);
            }
        });

        jLabel5.setText("Niveau");

        jLabel6.setText("Semestre");

        jLabel7.setText("Sigle de l'unité d'enseignement");

        rSButton_valider.setText("Valider");
        rSButton_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButton_validerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rSButton_valider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rSComboMetro_filiere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rSComboMetro_niveau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rSComboMetro_semestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rSComboMetro_option, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSComboMetro_ue_sigle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_filiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_niveau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(rSComboMetro_semestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_ue_sigle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rSButton_valider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rSComboMetro_filiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_filiereActionPerformed
        initCbOption();
    }//GEN-LAST:event_rSComboMetro_filiereActionPerformed

    private void rSComboMetro_niveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_niveauActionPerformed
        initCbsemestre();
    }//GEN-LAST:event_rSComboMetro_niveauActionPerformed

    private void rSButton_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButton_validerActionPerformed
        if(rSComboMetro_filiere.getSelectedIndex() < 0 || rSComboMetro_option.getSelectedIndex() < 0 || rSComboMetro_niveau.getSelectedIndex() < 0 || rSComboMetro_semestre.getSelectedIndex() < 0 || rSComboMetro_ue_sigle.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(this, "Renseignement manquant !", "Champ vide !", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(uniteEnseignementOption == null){
            uniteEnseignementOptionController.addUniteEnseignementOption(
                    optionController.getOption(filiereController.getFiliere(rSComboMetro_filiere.getSelectedItem().toString()).getId(), rSComboMetro_option.getSelectedItem().toString()).getId(),
                    uniteEnseignementController.getUniteEnseignement(rSComboMetro_ue_sigle.getSelectedItem().toString()).getId(),
                    semestreController.getSemestre(rSComboMetro_semestre.getSelectedItem().toString()).getId()
            );
        }else{
            uniteEnseignementOptionController.updateUniteEnseignementOption(
                    uniteEnseignementOption.getId(),
                    optionController.getOption(filiereController.getFiliere(rSComboMetro_filiere.getSelectedItem().toString()).getId(), rSComboMetro_option.getSelectedItem().toString()).getId(),
                    uniteEnseignementController.getUniteEnseignement(rSComboMetro_ue_sigle.getSelectedItem().toString()).getId(),
                    semestreController.getSemestre(rSComboMetro_semestre.getSelectedItem().toString()).getId()
            );
        }
        success_information();
        this.dispose();
    }//GEN-LAST:event_rSButton_validerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UniteEnseignementOptionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            UniteEnseignementOptionDialog dialog = new UniteEnseignementOptionDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    private final FiliereController filiereController;
    private final SemestreController semestreController;
    private final OptionController optionController;
    private final NiveauController niveauController;
    private final UniteEnseignementController uniteEnseignementController;
    private UniteEnseignementOption uniteEnseignementOption;
    private final UniteEnseignementOptionController uniteEnseignementOptionController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private rojeru_san.RSButton rSButton_valider;
    private rojerusan.RSComboMetro rSComboMetro_filiere;
    private rojerusan.RSComboMetro rSComboMetro_niveau;
    private rojerusan.RSComboMetro rSComboMetro_option;
    private rojerusan.RSComboMetro rSComboMetro_semestre;
    private rojerusan.RSComboMetro rSComboMetro_ue_sigle;
    // End of variables declaration//GEN-END:variables

    private void initCbfiliere(){
        rSComboMetro_filiere.removeAllItems();
        filiereController.getFilieres().forEach((f) -> {
            rSComboMetro_filiere.addItem(f.getFiliere());
        });
    }
    private void initCbOption(){
        rSComboMetro_option.removeAllItems();
        if(rSComboMetro_filiere.getSelectedIndex() < 0){
            return;
        }
        optionController.getOptions(filiereController.getFiliere(rSComboMetro_filiere.getSelectedItem().toString()).getId()).forEach((o) -> {
            rSComboMetro_option.addItem(o.getOption());
        });
    }
    private void initCbNiveau(){
        rSComboMetro_niveau.removeAllItems();
        niveauController.getNiveaux().forEach((n) -> {
            rSComboMetro_niveau.addItem(n.getNiveau());
        });
    }
    private void initCbsemestre(){
        rSComboMetro_semestre.removeAllItems();
        if(rSComboMetro_niveau.getSelectedIndex() < 0){
            return;
        }
        semestreController.getSemestres(niveauController.getNiveau(rSComboMetro_niveau.getSelectedItem().toString()).getId()).forEach((s) -> {
            rSComboMetro_semestre.addItem(s.getSemestre());
        });
    }

    private void initCbSigleUe() {
        rSComboMetro_ue_sigle.removeAllItems();
        uniteEnseignementController.getUniteEnseignements().forEach((u) -> {
            rSComboMetro_ue_sigle.addItem(u.getSigle());
        });
    }
    private void success_information() {
        JOptionPane.showMessageDialog(this, "Opération effectuée avec succes ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
    }
}
