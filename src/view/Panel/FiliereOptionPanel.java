/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import controller.AnneeController;
import controller.EtudiantController;
import controller.FiliereController;
import controller.OptionController;
import controller.ParametreController;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSPanelImage;
import view.dialog.FiliereDialog;
import view.dialog.OptionDialog;

/**
 *
 * @author ATH
 */
public class FiliereOptionPanel extends RSPanelImage {

    /**
     * Creates new form ElevePan
     */
    public FiliereOptionPanel() {
        filiereController = new FiliereController();
        optionController = new OptionController();
        etudiantController = new EtudiantController();
        anneeController = new AnneeController();
        parametreController = new ParametreController();
        initComponents();
        initCbAnnee();
        try {
            rSComboMetro_annee.setSelectedItem(anneeController.getAnnee(parametreController.getParametre().getId_annee()).getAnnee());
        } catch (Exception e) {
        }
        update_table_filiere();
        update_table_option();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_table_filiere = new javax.swing.JPopupMenu();
        menu_item_add_filiere = new javax.swing.JMenuItem();
        menu_item_update_filiere = new javax.swing.JMenuItem();
        menu_item_remove_filiere = new javax.swing.JMenuItem();
        popup_table_option = new javax.swing.JPopupMenu();
        menu_item_add_option = new javax.swing.JMenuItem();
        menu_item_update_option = new javax.swing.JMenuItem();
        menu_item_remove_option = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_filiere = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_option = new javax.swing.JTable();
        rSComboMetro_annee = new rojerusan.RSComboMetro();
        jLabel1 = new javax.swing.JLabel();

        menu_item_add_filiere.setText("Ajouter une nouvelle filière");
        menu_item_add_filiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_filiereActionPerformed(evt);
            }
        });
        popup_table_filiere.add(menu_item_add_filiere);

        menu_item_update_filiere.setText("Modifier la filière");
        menu_item_update_filiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_update_filiereActionPerformed(evt);
            }
        });
        popup_table_filiere.add(menu_item_update_filiere);

        menu_item_remove_filiere.setText("Retirer la filière");
        menu_item_remove_filiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_filiereActionPerformed(evt);
            }
        });
        popup_table_filiere.add(menu_item_remove_filiere);

        menu_item_add_option.setText("Ajouter nouvelle option");
        menu_item_add_option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_optionActionPerformed(evt);
            }
        });
        popup_table_option.add(menu_item_add_option);

        menu_item_update_option.setText("Modifier l'option");
        menu_item_update_option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_update_optionActionPerformed(evt);
            }
        });
        popup_table_option.add(menu_item_update_option);

        menu_item_remove_option.setText("Retirer l'option");
        popup_table_option.add(menu_item_remove_option);

        setImagen(new javax.swing.ImageIcon(getClass().getResource("/icon/getty_655998316_2000149920009280219_363765.jpg"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 700));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 102, 102), new java.awt.Color(52, 52, 255)), "Liste des filières", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseReleased(evt);
            }
        });

        jTable_filiere.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "FILIERE", "EFFECTIF", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_filiere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_filiereMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_filiereMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_filiere);
        if (jTable_filiere.getColumnModel().getColumnCount() > 0) {
            jTable_filiere.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_filiere.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_filiere.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_filiere.getColumnModel().getColumn(2).setMinWidth(150);
            jTable_filiere.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable_filiere.getColumnModel().getColumn(2).setMaxWidth(150);
            jTable_filiere.getColumnModel().getColumn(3).setMinWidth(10);
            jTable_filiere.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTable_filiere.getColumnModel().getColumn(3).setMaxWidth(10);
        }

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 102, 102), new java.awt.Color(51, 51, 255)), "Liste des options"));
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseReleased(evt);
            }
        });

        jTable_option.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "N°", "FILIERE / OPTION", "EFFECTIF", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_option.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_optionMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_option);
        if (jTable_option.getColumnModel().getColumnCount() > 0) {
            jTable_option.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_option.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_option.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_option.getColumnModel().getColumn(2).setMinWidth(150);
            jTable_option.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable_option.getColumnModel().getColumn(2).setMaxWidth(150);
            jTable_option.getColumnModel().getColumn(3).setMinWidth(10);
            jTable_option.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTable_option.getColumnModel().getColumn(3).setMaxWidth(10);
        }

        rSComboMetro_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_anneeActionPerformed(evt);
            }
        });

        jLabel1.setText("Année scolaire");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_add_filiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_filiereActionPerformed
        FiliereDialog classe = new FiliereDialog(null, true);
        classe.setVisible(true);
        update_table_filiere();
    }//GEN-LAST:event_menu_item_add_filiereActionPerformed

    private void menu_item_update_filiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_update_filiereActionPerformed
        if(jTable_filiere.getSelectedRow() > -1){
            FiliereDialog filiere = new FiliereDialog(null, true, filiereController.getFiliere(Integer.parseInt(jTable_filiere.getValueAt(jTable_filiere.getSelectedRow(), 3).toString())));
            filiere.setVisible(true);
        }
        update_table_filiere();
    }//GEN-LAST:event_menu_item_update_filiereActionPerformed

    private void menu_item_remove_filiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_filiereActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer la filière " + jTable_filiere.getValueAt(jTable_filiere.getSelectedRow(), 1) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if(choice == 0){
            filiereController.removeFiliere(Integer.parseInt(jTable_filiere.getValueAt(jTable_filiere.getSelectedRow(), 3).toString()));
        }
        update_table_filiere();
    }//GEN-LAST:event_menu_item_remove_filiereActionPerformed

    private void jScrollPane3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseReleased
        int r = jTable_filiere.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_filiere.getRowCount()){
            jTable_filiere.setRowSelectionInterval(r, r);

        }else{
            jTable_filiere.clearSelection();
        }
        int index = jTable_filiere.getSelectedRow();
        if(index < 0){
            menu_item_remove_filiere.setEnabled(false);
            menu_item_update_filiere.setEnabled(false);
        }else{
            menu_item_add_filiere.setEnabled(true);
            menu_item_remove_filiere.setEnabled(true);
            menu_item_update_filiere.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane){
            popup_table_filiere.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_filiere.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane3MouseReleased

    private void jTable_filiereMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_filiereMouseReleased
        int r = jTable_filiere.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_filiere.getRowCount()){
            jTable_filiere.setRowSelectionInterval(r, r);

        }else{
            jTable_filiere.clearSelection();
        }
        int index = jTable_filiere.getSelectedRow();
        if(index < 0){
            menu_item_remove_filiere.setEnabled(false);
            menu_item_update_filiere.setEnabled(false);
        }else{
            menu_item_add_filiere.setEnabled(true);
            menu_item_remove_filiere.setEnabled(true);
            menu_item_update_filiere.setEnabled(true);
        }
        update_table_option();
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JTable){
            popup_table_filiere.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_filiere.setVisible(true);
        }
    }//GEN-LAST:event_jTable_filiereMouseReleased

    private void jTable_optionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_optionMouseReleased
        int index = jTable_option.getSelectedRow();
        if(index < 0){
            menu_item_remove_option.setEnabled(false);
            menu_item_update_option.setEnabled(false);
        }else{
            menu_item_add_option.setEnabled(true);
            menu_item_remove_option.setEnabled(true);
            menu_item_update_option.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JTable){
            popup_table_option.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_option.setVisible(true);
        }
    }//GEN-LAST:event_jTable_optionMouseReleased

    private void jScrollPane1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseReleased
        int index = jTable_option.getSelectedRow();
        if(index < 0){
            menu_item_remove_option.setEnabled(false);
            menu_item_update_option.setEnabled(false);
        }else{
            menu_item_add_option.setEnabled(true);
            menu_item_remove_option.setEnabled(true);
            menu_item_update_option.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane){
            popup_table_option.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_option.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane1MouseReleased

    private void menu_item_add_optionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_optionActionPerformed
        OptionDialog option = new OptionDialog(null, true);
        option.setVisible(true);
        update_table_option();
    }//GEN-LAST:event_menu_item_add_optionActionPerformed

    private void menu_item_update_optionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_update_optionActionPerformed
        if(jTable_option.getSelectedRow() > -1){
            OptionDialog option = new OptionDialog(null, true, optionController.getOption(Integer.parseInt(jTable_option.getValueAt(jTable_option.getSelectedRow(), 3).toString())));
            option.setVisible(true);
        }
        update_table_option();
    }//GEN-LAST:event_menu_item_update_optionActionPerformed

    private void jTable_filiereMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_filiereMouseClicked
        int r = jTable_filiere.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_filiere.getRowCount()){
            jTable_filiere.setRowSelectionInterval(r, r);

        }else{
            jTable_filiere.clearSelection();
        }
        int index = jTable_filiere.getSelectedRow();
        if(index < 0){
            
        }else{
            update_table_option();
        }
        
    }//GEN-LAST:event_jTable_filiereMouseClicked

    private void rSComboMetro_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_anneeActionPerformed
        update_table_filiere();
        update_table_option();
    }//GEN-LAST:event_rSComboMetro_anneeActionPerformed

    private final FiliereController filiereController;
    private final OptionController optionController;
    private final EtudiantController etudiantController;
    private final AnneeController anneeController;
    private final ParametreController parametreController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_filiere;
    private javax.swing.JTable jTable_option;
    private javax.swing.JMenuItem menu_item_add_filiere;
    private javax.swing.JMenuItem menu_item_add_option;
    private javax.swing.JMenuItem menu_item_remove_filiere;
    private javax.swing.JMenuItem menu_item_remove_option;
    private javax.swing.JMenuItem menu_item_update_filiere;
    private javax.swing.JMenuItem menu_item_update_option;
    private javax.swing.JPopupMenu popup_table_filiere;
    private javax.swing.JPopupMenu popup_table_option;
    private rojerusan.RSComboMetro rSComboMetro_annee;
    // End of variables declaration//GEN-END:variables

//    private void success_information() {
//        JOptionPane.showMessageDialog(this, "Opération effectuée avec succes ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
//    }
    
    private void update_table_filiere(){
        String entete[] = {"N°", "FILIERE", "EFFECTIF", "ID"};
        DefaultTableModel dt = new DefaultTableModel(null,entete);
        dt.setRowCount(0);
        int id_annee = 0;
        if(rSComboMetro_annee.getSelectedIndex() > -1 && !"Toutes".equals(rSComboMetro_annee.getSelectedItem().toString())){
            id_annee = anneeController.getAnnee(rSComboMetro_annee.getSelectedItem().toString()).getId();
        }
        ArrayList<bean.Filiere> list_filiere = filiereController.getFilieres();

        for(int i = 0; i< list_filiere.size(); i++){
            Object colonne[] = new Object[4];
            colonne[0] = i + 1;
            colonne[1] = list_filiere.get(i).getFiliere();
            colonne[2] = etudiantController.getEtudiants(id_annee, list_filiere.get(i).getId()).size();
            colonne[3] = list_filiere.get(i).getId();
            dt.addRow(colonne);
        }
        this.jTable_filiere.setModel(dt);
        if (jTable_filiere.getColumnModel().getColumnCount() > 0) {
            jTable_filiere.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_filiere.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_filiere.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_filiere.getColumnModel().getColumn(2).setMinWidth(150);
            jTable_filiere.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable_filiere.getColumnModel().getColumn(2).setMaxWidth(150);
            jTable_filiere.getColumnModel().getColumn(3).setMinWidth(5);
            jTable_filiere.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTable_filiere.getColumnModel().getColumn(3).setMaxWidth(5);
//            jTable_filiere.getModel().addTableModelListener((TableModelEvent e) -> {
//                update_table_option();
//            });
            jTable_filiere.setRowHeight(30);
            jTable_filiere.getTableHeader().setBackground(new Color(0,112,192));
            jTable_filiere.getTableHeader().setForeground(Color.white);
            jTable_filiere.getTableHeader().setFont(new Font("Cambria Math", Font.BOLD, 13));
        }
    }
    private void update_table_option(){
        String entete[] = {"N°", "FILIERE/OPTION", "EFFECTIF", "ID"};
        DefaultTableModel dt = new DefaultTableModel(null,entete);
        dt.setRowCount(0);
        int id_filiere = 0;
        if(jTable_filiere.getSelectedRow() > -1){
            id_filiere = Integer.parseInt(jTable_filiere.getValueAt(jTable_filiere.getSelectedRow(), 3).toString());
        }
        int id_annee = 0;
        if(rSComboMetro_annee.getSelectedIndex() > -1 && !"Toutes".equals(rSComboMetro_annee.getSelectedItem().toString())){
            id_annee = anneeController.getAnnee(rSComboMetro_annee.getSelectedItem().toString()).getId();
        }
        ArrayList<bean.Option> list_option = optionController.getOptions(id_filiere);
        
        for(int i = 0; i< list_option.size(); i++){
            Object colonne[] = new Object[4];
            colonne[0] = i + 1;
            colonne[1] = filiereController.getFiliere(list_option.get(i).getId_filiere()).getFiliere() + " / " + list_option.get(i).getOption();
            colonne[2] = etudiantController.getEtudiants(id_annee, id_filiere, list_option.get(i).getId()).size();
            colonne[3] = list_option.get(i).getId();
            dt.addRow(colonne);
        }
        this.jTable_option.setModel(dt);
        
        if (jTable_option.getColumnModel().getColumnCount() > 0) {
            jTable_option.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_option.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_option.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_option.getColumnModel().getColumn(2).setMinWidth(150);
            jTable_option.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable_option.getColumnModel().getColumn(2).setMaxWidth(150);
            jTable_option.getColumnModel().getColumn(3).setMinWidth(5);
            jTable_option.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTable_option.getColumnModel().getColumn(3).setMaxWidth(5);
            jTable_option.setRowHeight(30);
            jTable_option.getTableHeader().setBackground(new Color(0,112,192));
            jTable_option.getTableHeader().setForeground(Color.white);
            jTable_option.getTableHeader().setFont(new Font("Cambria Math", Font.BOLD, 13));
        }
    }
    private void initCbAnnee() {
        rSComboMetro_annee.removeAllItems();
        anneeController.getAnnees().forEach((a) -> {
            rSComboMetro_annee.addItem(a.getAnnee());
        });
        if(rSComboMetro_annee.getItemCount() > 1){
            rSComboMetro_annee.addItem("Toutes");
        }
    }
}
