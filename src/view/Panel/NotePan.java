/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import controller.AnneeScolaireController;
import controller.EcController;
import controller.EtudiantController;
import controller.EvaluationController;
import controller.FiliereController;
import controller.NiveauController;
import controller.OptionsController;
import controller.SemestreController;
import controller.UeController;
import dialog.EcDialog;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSPanelImage;

/**
 *
 * @author ATH
 */
public class NotePan extends RSPanelImage {

    /**
     * Creates new form ElevePan
     */
    public NotePan() {
        filiereController = new FiliereController();
        optionsController = new OptionsController();
        niveauController = new NiveauController();
        semestreController = new SemestreController();
        ueController = new UeController();
        ecController = new EcController();
        anneeScolaireController = new AnneeScolaireController();
        etudiantController = new EtudiantController();
        evController = new EvaluationController();
        initComponents();
        update_rsc_annee();
        rSComboMetro_annee.setSelectedItem(anneeScolaireController.getAnneeScolaireEnCours());
        initCbFiliere();
        initCbOption();
        initCbNiveau();
        initCbSemestre();
        update_rsc_ue();
        update_rsc_ec();
        update_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_table = new javax.swing.JPopupMenu();
        menu_item_detail = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menu_item_add_ue = new javax.swing.JMenuItem();
        menu_item_update_ue = new javax.swing.JMenuItem();
        menu_item_remove_ue = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_note = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        rSComboMetro_filiere = new rojerusan.RSComboMetro();
        rSComboMetro_option = new rojerusan.RSComboMetro();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rSComboMetro_annee = new rojerusan.RSComboMetro();
        rSComboMetro_niveau = new rojerusan.RSComboMetro();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rSComboMetro_semestre = new rojerusan.RSComboMetro();
        jPanel3 = new javax.swing.JPanel();
        rSComboMetro_ue = new rojerusan.RSComboMetro();
        jLabel5 = new javax.swing.JLabel();
        rSComboMetro_ec = new rojerusan.RSComboMetro();
        jLabel6 = new javax.swing.JLabel();
        rSMTextFull_recherche = new rojeru_san.RSMTextFull();

        menu_item_detail.setText("Voir les modules");
        menu_item_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_detailActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_detail);
        popup_table.add(jSeparator1);

        menu_item_add_ue.setText("Ajouter nouvelle unité d'enseignemant");
        menu_item_add_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_ueActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_add_ue);

        menu_item_update_ue.setText("Modifier l'unité d'enseignemant");
        menu_item_update_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_update_ueActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_update_ue);

        menu_item_remove_ue.setText("Retirer l'unité d'enseignemant");
        menu_item_remove_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_ueActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_remove_ue);

        setImagen(new javax.swing.ImageIcon(getClass().getResource("/icon/getty_655998316_2000149920009280219_363765.jpg"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 579));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Table des notes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseReleased(evt);
            }
        });

        jTable_note.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "MATRICULE", "NOM ET PRENOM", "FILIERE", "SEMESTRE", "SIGLE UE", "SIGLE EC", "NOTE", "SESSION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_note.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_noteMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_note);
        if (jTable_note.getColumnModel().getColumnCount() > 0) {
            jTable_note.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_note.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_note.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_note.getColumnModel().getColumn(1).setMinWidth(80);
            jTable_note.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable_note.getColumnModel().getColumn(1).setMaxWidth(80);
            jTable_note.getColumnModel().getColumn(4).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(4).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(4).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(5).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(5).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(5).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(6).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(6).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(7).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(7).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(7).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(8).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(8).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(8).setMaxWidth(75);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        rSComboMetro_filiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_filiereActionPerformed(evt);
            }
        });

        rSComboMetro_option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_optionActionPerformed(evt);
            }
        });

        jLabel7.setText("Filière");

        jLabel8.setText("Option");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rSComboMetro_filiere, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(rSComboMetro_option, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_filiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(12, 12, 12))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Année");

        rSComboMetro_niveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_niveauActionPerformed(evt);
            }
        });

        jLabel4.setText("Niveau");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Semestre");

        rSComboMetro_semestre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SEMESTRE" }));
        rSComboMetro_semestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_semestreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rSComboMetro_semestre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rSComboMetro_niveau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_niveau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_semestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rSComboMetro_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_ueActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("UE");

        rSComboMetro_ec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_ecActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("EC");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rSComboMetro_ec, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addComponent(rSComboMetro_ue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rSComboMetro_ue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rSComboMetro_ec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        rSMTextFull_recherche.setPlaceholder("Rechercher");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(rSMTextFull_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rSMTextFull_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_add_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_ueActionPerformed
        dialog.UeDialog ue = new dialog.UeDialog(null, true);
        ue.setVisible(true);
        update_table();
    }//GEN-LAST:event_menu_item_add_ueActionPerformed

    private void menu_item_update_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_update_ueActionPerformed
        int row = jTable_note.getSelectedRow();
        String id_ue = jTable_note.getValueAt(row, 5).toString();
        dialog.UeDialog ue = new dialog.UeDialog(null, true, ueController.getUe(id_ue));
        ue.setVisible(true);
        update_table();
    }//GEN-LAST:event_menu_item_update_ueActionPerformed

    private void menu_item_remove_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_ueActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'unité d'enseignemant " + jTable_note.getValueAt(jTable_note.getSelectedRow(), 4) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if(choice == 0){
            ueController.removeUe(jTable_note.getValueAt(jTable_note.getSelectedRow(), 5).toString());
        }
        update_table();
    }//GEN-LAST:event_menu_item_remove_ueActionPerformed

    private void jScrollPane3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseReleased
        int r = jTable_note.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_note.getRowCount()){
            jTable_note.setRowSelectionInterval(r, r);

        }else{
            jTable_note.clearSelection();
        }
        int index = jTable_note.getSelectedRow();
        if(index < 0){
            menu_item_detail.setEnabled(false);
            menu_item_remove_ue.setEnabled(false);
            menu_item_update_ue.setEnabled(false);
        }else{
            menu_item_detail.setEnabled(true);
            menu_item_add_ue.setEnabled(true);
            menu_item_remove_ue.setEnabled(true);
            menu_item_update_ue.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane){
            popup_table.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane3MouseReleased

    private void jTable_noteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_noteMouseReleased
        int r = jTable_note.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_note.getRowCount()){
            jTable_note.setRowSelectionInterval(r, r);

        }else{
            jTable_note.clearSelection();
        }
        int index = jTable_note.getSelectedRow();
        if(index < 0){
            menu_item_detail.setEnabled(false);
            menu_item_remove_ue.setEnabled(false);
            menu_item_update_ue.setEnabled(false);
        }else{
            menu_item_detail.setEnabled(true);
            menu_item_add_ue.setEnabled(true);
            menu_item_remove_ue.setEnabled(true);
            menu_item_update_ue.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JTable){
            popup_table.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table.setVisible(true);
        }
    }//GEN-LAST:event_jTable_noteMouseReleased

    private void rSComboMetro_semestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_semestreActionPerformed
        update_rsc_ue();
        update_rsc_ec();
        update_table();
    }//GEN-LAST:event_rSComboMetro_semestreActionPerformed

    private void menu_item_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_detailActionPerformed
        int row = jTable_note.getSelectedRow();
        String id_ue = jTable_note.getValueAt(row, 5).toString();
        dialog.EcDialog ec = new EcDialog(null, true, ueController.getUe(id_ue));
        ec.setVisible(true);
        update_table();
    }//GEN-LAST:event_menu_item_detailActionPerformed

    private void rSComboMetro_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_ueActionPerformed
        update_rsc_ec();
        update_table();
    }//GEN-LAST:event_rSComboMetro_ueActionPerformed

    private void rSComboMetro_ecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_ecActionPerformed
        update_table();
    }//GEN-LAST:event_rSComboMetro_ecActionPerformed

    private void rSComboMetro_filiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_filiereActionPerformed
        initCbOption();
        update_table();
    }//GEN-LAST:event_rSComboMetro_filiereActionPerformed

    private void rSComboMetro_optionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_optionActionPerformed
        update_rsc_ue();
        update_table();
    }//GEN-LAST:event_rSComboMetro_optionActionPerformed

    private void rSComboMetro_niveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_niveauActionPerformed
        initCbSemestre();
        update_table();
    }//GEN-LAST:event_rSComboMetro_niveauActionPerformed

    private final FiliereController filiereController;
    private final OptionsController optionsController;
    private final NiveauController niveauController;
    private final SemestreController semestreController;
    private final UeController ueController;
    private final AnneeScolaireController anneeScolaireController;
    private final EcController ecController;
    private final EtudiantController etudiantController;
    private final EvaluationController evController;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable_note;
    private javax.swing.JMenuItem menu_item_add_ue;
    private javax.swing.JMenuItem menu_item_detail;
    private javax.swing.JMenuItem menu_item_remove_ue;
    private javax.swing.JMenuItem menu_item_update_ue;
    private javax.swing.JPopupMenu popup_table;
    private rojerusan.RSComboMetro rSComboMetro_annee;
    private rojerusan.RSComboMetro rSComboMetro_ec;
    private rojerusan.RSComboMetro rSComboMetro_filiere;
    private rojerusan.RSComboMetro rSComboMetro_niveau;
    private rojerusan.RSComboMetro rSComboMetro_option;
    private rojerusan.RSComboMetro rSComboMetro_semestre;
    private rojerusan.RSComboMetro rSComboMetro_ue;
    private rojeru_san.RSMTextFull rSMTextFull_recherche;
    // End of variables declaration//GEN-END:variables

    private void update_rsc_annee(){
        rSComboMetro_annee.removeAllItems();
        anneeScolaireController.getListAnneeScolaire().forEach((a) -> {
            rSComboMetro_annee.addItem(a.getAnnee());
        });
    }
    private void initCbFiliere() {
        rSComboMetro_filiere.removeAllItems();
        filiereController.getListFiliere().forEach((f) -> {
            rSComboMetro_filiere.addItem(f.getFiliere());
        });
        if(rSComboMetro_filiere.getItemCount() > 1){
            rSComboMetro_filiere.addItem("Toutes");
        }
    }
    private void initCbSemestre() {
        rSComboMetro_semestre.removeAllItems();
        String niveau = null;
        if(rSComboMetro_niveau.getSelectedIndex() > -1){
            niveau = rSComboMetro_niveau.getSelectedItem().toString();
        }
        semestreController.getListSemestre(niveau).forEach((s) -> {
            rSComboMetro_semestre.addItem(s.getSemestre());
        });
        if(rSComboMetro_semestre.getItemCount() > 1){
            rSComboMetro_semestre.addItem("Toutes");
        }
    }

//    private void success_information() {
//        JOptionPane.showMessageDialog(this, "Opération effectuée avec succes ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
//    }
      
    private void update_table(){
        String entete[] = {"N°", "MATRICULE", "NOM ET PRENOM", "FILIERE", "SEMESTRE", "SIGLE UE", "SIGLE EC", "NOTE", "SESSION"};
        DefaultTableModel dt=new DefaultTableModel(null,entete);
        dt.setRowCount(0);
        String annee = null, niveau = null, semestre = null, filiere = null, option = null, id_ue = null, id_ec = null, rechercher = null;
        if(rSComboMetro_annee.getSelectedIndex() > -1){
            annee = rSComboMetro_annee.getSelectedItem().toString();
        }
        if(rSComboMetro_niveau.getSelectedIndex() > -1){
            annee = rSComboMetro_annee.getSelectedItem().toString();
        }
        if(rSComboMetro_semestre.getSelectedIndex() > -1){
            semestre = rSComboMetro_semestre.getSelectedItem().toString();
        }
        if(rSComboMetro_filiere.getSelectedIndex() > -1){
            filiere = rSComboMetro_filiere.getSelectedItem().toString();
        }
        if(rSComboMetro_option.getSelectedIndex() > -1){
            option = rSComboMetro_option.getSelectedItem().toString();
        }
        if(rSComboMetro_ue.getSelectedIndex() > -1){
            id_ue = rSComboMetro_ue.getSelectedItem().toString();
        }
        if(rSComboMetro_ec.getSelectedIndex() > -1){
            id_ec = rSComboMetro_ec.getSelectedItem().toString();
        }
        if(rSMTextFull_recherche.getText().length() > 0){
            rechercher = rSMTextFull_recherche.getText();
        }
        ArrayList<bean.Note> listtTableau = evController.getColonnes(annee, niveau, semestre, filiere, option, id_ue, id_ec, rechercher);
        
        for(int i = 0; i< listtTableau.size(); i++){
            Object colonne[]=new Object[9];
            colonne[0] = i + 1;
            colonne[1] = listtTableau.get(i).getMatricule();
            colonne[2] = listtTableau.get(i).getNom_prenom();
            colonne[3] = listtTableau.get(i).getFiliere();
            colonne[4] = listtTableau.get(i).getSemestre();
            colonne[5] = listtTableau.get(i).getId_ue();
            colonne[6] = listtTableau.get(i).getId_ec();
            colonne[7] = evController.getNote(listtTableau.get(i).getAnnee(), listtTableau.get(i).getMatricule(), listtTableau.get(i).getId_ec(), "NOTE");
            colonne[8] = evController.getNote(listtTableau.get(i).getAnnee(), listtTableau.get(i).getMatricule(), listtTableau.get(i).getId_ec(), "SESSION");
            dt.addRow(colonne);
        }
        this.jTable_note.setModel(dt);
        if (jTable_note.getColumnModel().getColumnCount() > 0) {
            jTable_note.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_note.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_note.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_note.getColumnModel().getColumn(1).setMinWidth(80);
            jTable_note.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable_note.getColumnModel().getColumn(1).setMaxWidth(80);
            jTable_note.getColumnModel().getColumn(4).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(4).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(4).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(5).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(5).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(5).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(6).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(6).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(7).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(7).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(7).setMaxWidth(75);
            jTable_note.getColumnModel().getColumn(8).setMinWidth(75);
            jTable_note.getColumnModel().getColumn(8).setPreferredWidth(75);
            jTable_note.getColumnModel().getColumn(8).setMaxWidth(75);
            jTable_note.setRowHeight(30);
            this.jTable_note.getModel().addTableModelListener((TableModelEvent e) -> {
                mise_a_jour_note();
            });
        }
    }

    private void mise_a_jour_note() {
        int row = jTable_note.getSelectedRow();
        int col = jTable_note.getSelectedColumn();        
        if(col < 7){
            update_table();
            return;
        }
        double valeur;
        try {
            valeur = Double.parseDouble(jTable_note.getValueAt(row, col).toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valeur incorrect !\nSaisissez uniquement des chiffres !\nMettre un point a la place de virgule.", "Valeur incorrecte ", JOptionPane.INFORMATION_MESSAGE);
            update_table();
            return;
        }
        if(valeur < 0.00 || valeur > 20.00){
            JOptionPane.showMessageDialog(this, "Valeur incorrect !\nLa note à saisir doit être incluse entre 0 et 20!", "Valeur incorrecte ", JOptionPane.INFORMATION_MESSAGE);
            update_table();
            return;
        }
        evController.setNote(rSComboMetro_annee.getSelectedItem().toString(), jTable_note.getValueAt(row, 1).toString(), jTable_note.getValueAt(row, 6).toString(), jTable_note.getModel().getColumnName(col), valeur);
    }
    private void update_rsc_ue() {
        rSComboMetro_ue.removeAllItems();
        String filiere = null, option = null, niveau = null, semestre = null;
        if(rSComboMetro_filiere.getSelectedIndex() > -1){
            filiere = rSComboMetro_filiere.getSelectedItem().toString();
        }
        if(rSComboMetro_option.getSelectedIndex() > -1){
            option = rSComboMetro_option.getSelectedItem().toString();
        }
        if(rSComboMetro_niveau.getSelectedIndex() > -1){
            niveau = rSComboMetro_niveau.getSelectedItem().toString();
        }
        if(rSComboMetro_semestre.getSelectedIndex() > -1){
            semestre = rSComboMetro_semestre.getSelectedItem().toString();
        }
        rSComboMetro_ue.addItem("Toutes");
        ueController.getListUe(null, option, filiere, semestre, niveau).forEach((ue) -> {
            rSComboMetro_ue.addItem(ue.getId_ue());
        });
        
        
    }

    private void update_rsc_ec() {
        rSComboMetro_ec.removeAllItems();
        String id_ue = null;
        if(rSComboMetro_ue.getSelectedIndex() > -1){
            id_ue = rSComboMetro_ue.getSelectedItem().toString();
        }
        rSComboMetro_ec.addItem("Tous");
        ecController.getListEc(null, id_ue).forEach((ec) -> {
            rSComboMetro_ec.addItem(ec.getId_ec());
        });
        
    }
    private void initCbNiveau(){
        rSComboMetro_niveau.removeAllItems();
        niveauController.getListNiveau().forEach((n) -> {
            rSComboMetro_niveau.addItem(n.getNiveau());
        });
        if(rSComboMetro_niveau.getItemCount() > 1){
            rSComboMetro_niveau.addItem("Tous");
        }
    }
    private void initCbOption() {
        rSComboMetro_option.removeAllItems();
        String filiere = null;
        if(rSComboMetro_filiere.getSelectedIndex() > -1){
            filiere = rSComboMetro_filiere.getSelectedItem().toString();
        }
        optionsController.getListOptions(filiere).forEach((o) -> {
            rSComboMetro_option.addItem(o.getOptions());
        });
        if(rSComboMetro_option.getItemCount() > 1){
            rSComboMetro_option.addItem("Toutes");
        }
    }
}
