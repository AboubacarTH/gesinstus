/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import bean.ElementConstitutif;
import bean.VolumeHoraireCours;
import controller.ElementConstitutifController;
import controller.UniteEnseignementController;
import controller.VolumeHoraireCoursController;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSPanelImage;
import view.dialog.ElementConstitutifDialog;
import view.dialog.UniteEnseignementDialog;

/**
 *
 * @author ATH
 */
public class UniteEnseignementElementConstitutifPanel extends RSPanelImage {

    /**
     * Creates new form ElevePan
     */
    public UniteEnseignementElementConstitutifPanel() {
        uniteEnseignementController = new UniteEnseignementController();
        elementConstitutifController = new ElementConstitutifController();
        volumeHoraireCoursController = new VolumeHoraireCoursController();
        initComponents();
        update_table_ue();
        update_table_ec();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_table_ue = new javax.swing.JPopupMenu();
        menu_item_detail = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menu_item_add_ue = new javax.swing.JMenuItem();
        menu_item_update_ue = new javax.swing.JMenuItem();
        menu_item_remove_ue = new javax.swing.JMenuItem();
        popup_table_ec = new javax.swing.JPopupMenu();
        menu_item_add_ec = new javax.swing.JMenuItem();
        menu_item_update_ec = new javax.swing.JMenuItem();
        menu_item_remove_ec = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_ue = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        rSMTextFull_rechercher = new rojeru_san.RSMTextFull();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_ec = new javax.swing.JTable();

        menu_item_detail.setText("Voir les EC");
        menu_item_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_detailActionPerformed(evt);
            }
        });
        popup_table_ue.add(menu_item_detail);
        popup_table_ue.add(jSeparator1);

        menu_item_add_ue.setText("Ajouter nouvelle unité d'enseignemant");
        menu_item_add_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_ueActionPerformed(evt);
            }
        });
        popup_table_ue.add(menu_item_add_ue);

        menu_item_update_ue.setText("Modifier l'unité d'enseignemant");
        menu_item_update_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_update_ueActionPerformed(evt);
            }
        });
        popup_table_ue.add(menu_item_update_ue);

        menu_item_remove_ue.setText("Retirer l'unité d'enseignemant");
        menu_item_remove_ue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_ueActionPerformed(evt);
            }
        });
        popup_table_ue.add(menu_item_remove_ue);

        menu_item_add_ec.setText("Ajouter nouveau element constitutif");
        menu_item_add_ec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_ecActionPerformed(evt);
            }
        });
        popup_table_ec.add(menu_item_add_ec);

        menu_item_update_ec.setText("Modifier  l'element constitutif");
        menu_item_update_ec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_update_ecActionPerformed(evt);
            }
        });
        popup_table_ec.add(menu_item_update_ec);

        menu_item_remove_ec.setText("Retirer l'element constitutif");
        menu_item_remove_ec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_ecActionPerformed(evt);
            }
        });
        popup_table_ec.add(menu_item_remove_ec);

        setImagen(new javax.swing.ImageIcon(getClass().getResource("/icon/getty_655998316_2000149920009280219_363765.jpg"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 579));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 51, 102), new java.awt.Color(0, 102, 102)), "Liste des unités d'enseignemants", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseReleased(evt);
            }
        });

        jTable_ue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "SIGLE", "UNITE D'ENSEIGNEMANT", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_ue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_ueMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_ueMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_ue);
        if (jTable_ue.getColumnModel().getColumnCount() > 0) {
            jTable_ue.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_ue.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_ue.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_ue.getColumnModel().getColumn(1).setMinWidth(150);
            jTable_ue.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable_ue.getColumnModel().getColumn(1).setMaxWidth(150);
            jTable_ue.getColumnModel().getColumn(3).setMinWidth(5);
            jTable_ue.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTable_ue.getColumnModel().getColumn(3).setMaxWidth(5);
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Filtrage table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        rSMTextFull_rechercher.setPlaceholder("Rechercher");
        rSMTextFull_rechercher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rSMTextFull_rechercherKeyReleased(evt);
            }
        });

        jLabel1.setText("Rechercher par SIGLE ou par NOM");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rSMTextFull_rechercher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSMTextFull_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 51, 102), new java.awt.Color(0, 102, 102)), "Liste des elements constitutifs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jScrollPane4.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane4MouseReleased(evt);
            }
        });

        jTable_ec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "SIGLE", "ELEMENT CONSTITUTIF", "CM", "TD_TP", "VHE", "CREDIT", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_ec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_ecMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTable_ec);
        if (jTable_ec.getColumnModel().getColumnCount() > 0) {
            jTable_ec.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_ec.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_ec.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_ec.getColumnModel().getColumn(1).setMinWidth(105);
            jTable_ec.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable_ec.getColumnModel().getColumn(1).setMaxWidth(105);
            jTable_ec.getColumnModel().getColumn(3).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(3).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(3).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(4).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(4).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(4).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(5).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(5).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(5).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(6).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(6).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(7).setMinWidth(5);
            jTable_ec.getColumnModel().getColumn(7).setPreferredWidth(5);
            jTable_ec.getColumnModel().getColumn(7).setMaxWidth(5);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(456, 456, 456))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_add_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_ueActionPerformed
        UniteEnseignementDialog ued = new UniteEnseignementDialog(null, true);
        ued.setVisible(true);
        update_table_ue();
    }//GEN-LAST:event_menu_item_add_ueActionPerformed

    private void menu_item_update_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_update_ueActionPerformed
        int row = jTable_ue.getSelectedRow();
        int id = Integer.parseInt(jTable_ue.getValueAt(row, 3).toString());
        UniteEnseignementDialog ued = new UniteEnseignementDialog(null, true, uniteEnseignementController.getUniteEnseignement(id));
        ued.setVisible(true);
        update_table_ue();
    }//GEN-LAST:event_menu_item_update_ueActionPerformed

    private void menu_item_remove_ueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_ueActionPerformed
        int row = jTable_ue.getSelectedRow();
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'unité d'enseignemant " + jTable_ue.getValueAt(row, 2) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            int id = Integer.parseInt(jTable_ue.getValueAt(row, 3).toString());
            uniteEnseignementController.removeUniteEnseignement(id);
        }
        update_table_ue();
    }//GEN-LAST:event_menu_item_remove_ueActionPerformed

    private void jScrollPane3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseReleased
        action_popup_menu_ue(evt);
        if (evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane) {
            popup_table_ue.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_ue.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane3MouseReleased

    private void jTable_ueMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ueMouseReleased
        action_popup_menu_ue(evt);
        if (evt.isPopupTrigger() && evt.getComponent() instanceof JTable) {
            popup_table_ue.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_ue.setVisible(true);
        }
    }//GEN-LAST:event_jTable_ueMouseReleased

    private void menu_item_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_detailActionPerformed
//        int row = jTable_ue.getSelectedRow();
//        String id_ue = jTable_ue.getValueAt(row, 5).toString();
//        dialog.EcDialog ec = new EcDialog(null, true, ueController.getUe(id_ue));
//        ec.setVisible(true);
//        update_table();
    }//GEN-LAST:event_menu_item_detailActionPerformed

    private void jTable_ecMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ecMouseReleased
        action_popup_menu_ec(evt);
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JTable){
            popup_table_ec.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_ec.setVisible(true);
        }
    }//GEN-LAST:event_jTable_ecMouseReleased

    private void jScrollPane4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane4MouseReleased
        action_popup_menu_ec(evt);
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane){
            popup_table_ec.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table_ec.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane4MouseReleased

    private void menu_item_add_ecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_ecActionPerformed
        int row = jTable_ue.getSelectedRow();
        if(row > -1){
            int id = Integer.parseInt(jTable_ue.getValueAt(row, 3).toString());
            ElementConstitutifDialog ecd = new ElementConstitutifDialog(null, true, uniteEnseignementController.getUniteEnseignement(id));
            ecd.setVisible(true);
        }else{
            ElementConstitutifDialog ecd = new ElementConstitutifDialog(null, true);
            ecd.setVisible(true);
        }
        update_table_ec();
    }//GEN-LAST:event_menu_item_add_ecActionPerformed

    private void menu_item_update_ecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_update_ecActionPerformed
        int row = jTable_ec.getSelectedRow();
        if(row < 0){
            return;
        }
        int id = Integer.parseInt(jTable_ec.getValueAt(row, 7).toString());
        ElementConstitutifDialog ecd = new ElementConstitutifDialog(null, true, elementConstitutifController.getElementConstitutif(id));
            ecd.setVisible(true);
        update_table_ec();
    }//GEN-LAST:event_menu_item_update_ecActionPerformed

    private void menu_item_remove_ecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_ecActionPerformed
        int row = jTable_ec.getSelectedRow();
        if(row < 0){
            return;
        }
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'element constitutif " + jTable_ec.getValueAt(row, 2) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if(choice == 0){
            int id = Integer.parseInt(jTable_ec.getValueAt(row, 7).toString());
            elementConstitutifController.removeElementConstitutif(id);
        }
        update_table_ec();
    }//GEN-LAST:event_menu_item_remove_ecActionPerformed

    private void jTable_ueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ueMouseClicked
        update_table_ec();
    }//GEN-LAST:event_jTable_ueMouseClicked

    private void rSMTextFull_rechercherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rSMTextFull_rechercherKeyReleased
        update_table_ue();
        update_table_ec();
    }//GEN-LAST:event_rSMTextFull_rechercherKeyReleased

    private final UniteEnseignementController uniteEnseignementController;
    private final ElementConstitutifController elementConstitutifController;
    private final VolumeHoraireCoursController volumeHoraireCoursController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable_ec;
    private javax.swing.JTable jTable_ue;
    private javax.swing.JMenuItem menu_item_add_ec;
    private javax.swing.JMenuItem menu_item_add_ue;
    private javax.swing.JMenuItem menu_item_detail;
    private javax.swing.JMenuItem menu_item_remove_ec;
    private javax.swing.JMenuItem menu_item_remove_ue;
    private javax.swing.JMenuItem menu_item_update_ec;
    private javax.swing.JMenuItem menu_item_update_ue;
    private javax.swing.JPopupMenu popup_table_ec;
    private javax.swing.JPopupMenu popup_table_ue;
    private rojeru_san.RSMTextFull rSMTextFull_rechercher;
    // End of variables declaration//GEN-END:variables

    private void update_table_ue() {
        String entete[] = {"N°", "SIGLE", "UNITE D'ENSEIGNEMANT", "ID"};
        DefaultTableModel dt = new DefaultTableModel(null, entete);
        dt.setRowCount(0);
        
        String rechercher = null;
        if(rSMTextFull_rechercher.getText().length() > 0){
            rechercher = rSMTextFull_rechercher.getText();
        }
        
        ArrayList<bean.UniteEnseignement> list_ue = uniteEnseignementController.getUniteEnseignements(rechercher);        
        for (int i = 0; i < list_ue.size(); i++) {
            Object colonne[] = new Object[4];
            colonne[0] = i + 1;
            colonne[1] = list_ue.get(i).getSigle();
            colonne[2] = list_ue.get(i).getNom();
            colonne[3] = list_ue.get(i).getId();
            dt.addRow(colonne);
        }
        this.jTable_ue.setModel(dt);
        if (jTable_ue.getColumnModel().getColumnCount() > 0) {
            jTable_ue.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_ue.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_ue.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_ue.getColumnModel().getColumn(1).setMinWidth(105);
            jTable_ue.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable_ue.getColumnModel().getColumn(1).setMaxWidth(105);
            jTable_ue.getColumnModel().getColumn(3).setMinWidth(5);
            jTable_ue.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTable_ue.getColumnModel().getColumn(3).setMaxWidth(5);
            jTable_ue.setRowHeight(30);
        }
        jTable_ue.getTableHeader().setBackground(new Color(0,112,192));
        jTable_ue.getTableHeader().setForeground(Color.white);
        jTable_ue.getTableHeader().setFont(new Font("Cambria Math", Font.BOLD, 13));
    }
    
    private void update_table_ec() {
        int row = jTable_ue.getSelectedRow(), id = 0;
        if(row > -1){
            id = Integer.parseInt(jTable_ue.getValueAt(row, 3).toString());
        }
        String entete[] = {"N°", "SIGLE", "ELEMENT CONSTITUTIF", "CM", "TD_TP", "VHE", "CREDIT", "ID"};
        DefaultTableModel dt = new DefaultTableModel(null, entete);
        dt.setRowCount(0);
        String rechercher = null;
        if(rSMTextFull_rechercher.getText().length() > 0){
            rechercher = rSMTextFull_rechercher.getText();
        }
        ArrayList<ElementConstitutif> list_ec = elementConstitutifController.getElementConstitutifs(id, rechercher);
        
        for(int i = 0; i< list_ec.size(); i++){
            Object colonne[] = new Object[8];
            colonne[0] = i + 1;
            colonne[1] = list_ec.get(i).getSigle();
            colonne[2] = list_ec.get(i).getNom();
            VolumeHoraireCours vhc;
            try {
                vhc = volumeHoraireCoursController.getVolumeHoraireCours(list_ec.get(id).getId());
            } catch (Exception e) {
                vhc = null;
            }
            if(vhc != null){
                colonne[3] = vhc.getCm();
                colonne[4] = vhc.getTd_tp();
            }else{
                colonne[3] = 0.0;
                colonne[4] = 0.0;
            }
            colonne[5] = list_ec.get(i).getVhe();
            colonne[6] = list_ec.get(i).getCredit();
            colonne[7] = list_ec.get(i).getId();
            dt.addRow(colonne);
        }
        this.jTable_ec.setModel(dt);
        if (jTable_ec.getColumnModel().getColumnCount() > 0) {
            jTable_ec.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_ec.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_ec.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_ec.getColumnModel().getColumn(1).setMinWidth(105);
            jTable_ec.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable_ec.getColumnModel().getColumn(1).setMaxWidth(105);
            jTable_ec.getColumnModel().getColumn(3).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(3).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(3).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(4).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(4).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(4).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(5).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(5).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(5).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(6).setMinWidth(75);
            jTable_ec.getColumnModel().getColumn(6).setPreferredWidth(75);
            jTable_ec.getColumnModel().getColumn(6).setMaxWidth(75);
            jTable_ec.getColumnModel().getColumn(7).setMinWidth(5);
            jTable_ec.getColumnModel().getColumn(7).setPreferredWidth(5);
            jTable_ec.getColumnModel().getColumn(7).setMaxWidth(5);
            jTable_ec.setRowHeight(30);
            
            this.jTable_ec.getModel().addTableModelListener((TableModelEvent e) -> {
                mise_a_jour_note();
            });
        }
        jTable_ec.getTableHeader().setBackground(new Color(0,112,192));
        jTable_ec.getTableHeader().setForeground(Color.white);
        jTable_ec.getTableHeader().setFont(new Font("Cambria Math", Font.BOLD, 13));
    }
    private void mise_a_jour_note() {
        int row = jTable_ec.getSelectedRow();
        int col = jTable_ec.getSelectedColumn();        
        if(col < 3){
            update_table_ec();
            return;
        }
        double valeur;
        try {
            valeur = Double.parseDouble(jTable_ec.getValueAt(row, col).toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valeur incorrect !\nSaisissez uniquement des chiffres !\nMettre un point a la place de virgule.", "Valeur incorrecte ", JOptionPane.INFORMATION_MESSAGE);
            update_table_ec();
            return;
        }
//        if(valeur < 0.00 || valeur > 20.00){
//            JOptionPane.showMessageDialog(this, "Valeur incorrect !\nLa note à saisir doit être incluse entre 0 et 20!", "Valeur incorrecte ", JOptionPane.INFORMATION_MESSAGE);
//            update_table_ec();
//            return;
//        }
//        ecController.setNote(jTable_ec.getValueAt(row, 1).toString(), jTable_ec.getModel().getColumnName(col), valeur);
    }

    private void action_popup_menu_ue(java.awt.event.MouseEvent evt) {
        int r = jTable_ue.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < jTable_ue.getRowCount()) {
            jTable_ue.setRowSelectionInterval(r, r);

        } else {
            jTable_ue.clearSelection();
        }
        int index = jTable_ue.getSelectedRow();
        if (index < 0) {
            menu_item_detail.setEnabled(false);
            menu_item_remove_ue.setEnabled(false);
            menu_item_update_ue.setEnabled(false);
            update_table_ec();
        } else {
            menu_item_detail.setEnabled(true);
            menu_item_add_ue.setEnabled(true);
            menu_item_remove_ue.setEnabled(true);
            menu_item_update_ue.setEnabled(true);
        }
    }

    private void action_popup_menu_ec(java.awt.event.MouseEvent evt) {
        int r = jTable_ec.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_ec.getRowCount()){
            jTable_ec.setRowSelectionInterval(r, r);

        }else{
            jTable_ec.clearSelection();
        }
        int index = jTable_ec.getSelectedRow();
        if(index < 0){
            menu_item_remove_ec.setEnabled(false);
            menu_item_update_ec.setEnabled(false);
        }else{
            menu_item_add_ec.setEnabled(true);
            menu_item_remove_ec.setEnabled(true);
            menu_item_update_ec.setEnabled(true);
        }
    }
}
